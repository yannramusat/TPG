#!/bin/env python3

from app import App
from structures import InputRelation, InputSchema, TransformationRule, Scenario

if __name__ == "__main__":
    # app setup
    scheme = "bolt"
    hostname = "localhost"
    port = "7687"
    uri = f"{scheme}://{hostname}:{port}"
    app = App(uri, "neo4j", verbose=False)

    # common prefix for CSVs; the data has been generated by iBench
    prefix = "file:///home/yann/research/ibench/build/ibench/"
    nbLaunches = 1
    showStats = True
    useIndexes = True

    # execute the scenario PersonAddress
    from scenarios.person_address import PersonAddressScenarioWithIndexes
    results = []
    for i in [100, 200, 500, 1000, 2000]:
        scenario = PersonAddressScenarioWithIndexes(prefix, size=i)
        results.append(scenario.run(app, launches=nbLaunches, stats=showStats, index=useIndexes))

    # execute the Naive alternative
    from scenarios.person_address import PersonAddressScenarioNaive
    resultsNaive = []
    for i in []: #[100, 200, 500, 1000, 2000]:
        scenario = PersonAddressScenarioNaive(prefix, size=i)
        resultsNaive.append(scenario.run(app, launches=nbLaunches, stats=showStats, index=useIndexes))

    # execute the alternative with conflict detection
    from scenarios.person_address import PersonAddressScenarioWithConflictDetection
    resultsCD = []
    for i in [100, 200, 500, 1000, 2000]:
        scenario = PersonAddressScenarioWithConflictDetection(prefix, size=i)
        resultsCD.append(scenario.run(app, launches=nbLaunches, stats=showStats, index=useIndexes))
   
    # print results   
    print(results)
    print(resultsNaive)
    print(resultsCD)

    # close connection
    app.close()
